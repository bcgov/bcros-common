"""0010_product_app_reports

Revision ID: 3d920eadcbdf
Revises: 1eccc995f1ac
Create Date: 2025-06-03 16:04:24.120513

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3d920eadcbdf'
down_revision = '1eccc995f1ac'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    product_codes = op.create_table('product_codes',
    sa.Column('product_code', postgresql.ENUM('BUSINESS', 'BUSINESS_SEARCH', 'CA_SEARCH', 'DIR_SEARCH', 'MHR', 'NRO', 'PPR', 'STRR', name='productcode'), nullable=False),
    sa.Column('product_code_desc', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('product_code')
    )
    with op.batch_alter_table('application_reports', schema=None) as batch_op:
        batch_op.add_column(sa.Column('product_code', postgresql.ENUM('BUSINESS', 'BUSINESS_SEARCH', 'CA_SEARCH', 'DIR_SEARCH', 'MHR', 'NRO', 'PPR', 'STRR', name='productcode'), nullable=True))
        batch_op.create_index(batch_op.f('ix_application_reports_product_code'), ['product_code'], unique=False)
        batch_op.create_foreign_key(None, 'product_codes', ['product_code'], ['product_code'])

    # Manually added begin
    op.bulk_insert(
        product_codes,
        [
            {"product_code": "BUSINESS", "product_code_desc": "Business Registry & Name Request"},
            {"product_code": "BUSINESS_SEARCH", "product_code_desc": "Business Search"},
            {"product_code": "CA_SEARCH", "product_code_desc": "Competent Authority Search"},
            {"product_code": "DIR_SEARCH", "product_code_desc": "Director Search"},
            {"product_code": "MHR", "product_code_desc": "Manufactured Home Registry"},
            {"product_code": "NRO", "product_code_desc": "Names Request"},
            {"product_code": "PPR", "product_code_desc": "Personal Property Registry"},
            {"product_code": "STRR", "product_code_desc": "Short Term Rental Registry"},
        ],
    )
    # Manually added end

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('application_reports', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_application_reports_product_code'))
        batch_op.drop_column('product_code')

    op.drop_table('product_codes')
    # ### end Alembic commands ###
